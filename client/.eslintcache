[{"/Users/stevenkeezer/Desktop/mernchatapp/client/src/index.js":"1","/Users/stevenkeezer/Desktop/mernchatapp/client/src/App.js":"2","/Users/stevenkeezer/Desktop/mernchatapp/client/src/reportWebVitals.js":"3","/Users/stevenkeezer/Desktop/mernchatapp/client/src/pages/Signup.jsx":"4","/Users/stevenkeezer/Desktop/mernchatapp/client/src/pages/Login.jsx":"5","/Users/stevenkeezer/Desktop/mernchatapp/client/src/pages/Home.jsx":"6","/Users/stevenkeezer/Desktop/mernchatapp/client/src/services/authenticationService.js":"7","/Users/stevenkeezer/Desktop/mernchatapp/client/src/layout/LoginLayout.jsx":"8","/Users/stevenkeezer/Desktop/mernchatapp/client/src/layout/Sidebar.jsx":"9","/Users/stevenkeezer/Desktop/mernchatapp/client/src/utilities/handleResponse.js":"10","/Users/stevenkeezer/Desktop/mernchatapp/client/src/layout/Dropdown.jsx":"11","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Conversations.jsx":"12","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/UserButton.jsx":"13","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Chat.jsx":"14","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Search.jsx":"15","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Users.jsx":"16","/Users/stevenkeezer/Desktop/mernchatapp/client/src/services/chatService.js":"17","/Users/stevenkeezer/Desktop/mernchatapp/client/src/services/userService.js":"18","/Users/stevenkeezer/Desktop/mernchatapp/client/src/utilities/common.js":"19","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Message.jsx":"20","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/EmptyState.jsx":"21","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/ListAvatar.jsx":"22"},{"size":500,"mtime":1611195418984,"results":"23","hashOfConfig":"24"},{"size":2733,"mtime":1612249743301,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611195418985,"results":"26","hashOfConfig":"24"},{"size":5415,"mtime":1612232931899,"results":"27","hashOfConfig":"24"},{"size":4789,"mtime":1612232823301,"results":"28","hashOfConfig":"24"},{"size":2447,"mtime":1612416289199,"results":"29","hashOfConfig":"24"},{"size":3352,"mtime":1612416260433,"results":"30","hashOfConfig":"24"},{"size":1957,"mtime":1612406921192,"results":"31","hashOfConfig":"24"},{"size":7980,"mtime":1612249511863,"results":"32","hashOfConfig":"24"},{"size":758,"mtime":1612236457534,"results":"33","hashOfConfig":"24"},{"size":2127,"mtime":1612245104924,"results":"34","hashOfConfig":"24"},{"size":4488,"mtime":1612417525812,"results":"35","hashOfConfig":"24"},{"size":1149,"mtime":1612414431755,"results":"36","hashOfConfig":"24"},{"size":6021,"mtime":1612414004086,"results":"37","hashOfConfig":"24"},{"size":1623,"mtime":1612144352326,"results":"38","hashOfConfig":"24"},{"size":1041,"mtime":1612219365464,"results":"39","hashOfConfig":"24"},{"size":5115,"mtime":1612416262856,"results":"40","hashOfConfig":"24"},{"size":1404,"mtime":1612416272982,"results":"41","hashOfConfig":"24"},{"size":359,"mtime":1612084034665,"results":"42","hashOfConfig":"24"},{"size":2550,"mtime":1612250700239,"results":"43","hashOfConfig":"24"},{"size":1539,"mtime":1612304089360,"results":"44","hashOfConfig":"24"},{"size":1780,"mtime":1612414481596,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"17k7vst",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/stevenkeezer/Desktop/mernchatapp/client/src/index.js",[],["101","102"],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/App.js",["103"],"import React from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport { SnackbarProvider } from 'notistack';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  let theme = createMuiTheme({\n    overrides: {\n      MuiOutlinedInput: {\n        root: {\n          \"& $notchedOutline\": {\n            borderColor: \"white\"\n          },\n          \"&:hover $notchedOutline\": {\n            borderColor: \"white\"\n          },\n          \"&$focused $notchedOutline\": {\n            borderColor: \"white\"\n          }\n        }\n      }\n    },\n    palette: {\n      primary: {\n        light: '#4791db',\n        main: '#3a8dff',\n        dark: '#115293',\n        black: \"black\",\n        gray: \"#BFC9DB\"\n      },\n      secondary: {\n        light: '#ffd95a',\n        main: '#f9a825',\n        dark: '#c17900',\n        contrastText: '#212121',\n      },\n      message: {\n        bubble: \"#f4f6fa\",\n        messageBubbleLeft: `linear-gradient(225deg, #6cc1ff 0%, #3a8dff 100%)`,\n        messageBubbleText: \"#91a3c0\",\n        label: \"#BECCE2\"\n      },\n      background: {\n        default: '#ffffff',\n      },\n      icon: {\n        default: '#D1D9E6',\n        online: \"#1CED84\"\n      },\n      notification: {\n        default: \"#3F92FF\"\n      }\n    },\n    typography: {\n      useNextVariants: true,\n      button: {\n        textTransform: 'none'\n      },\n      h4: {\n        fontSize: 26,\n      },\n      subtitle1: {\n        fontSize: 19\n      }\n    },\n    buttonHeader: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'space-between',\n      flexDirection: 'column',\n      bgcolor: 'background.paper',\n      minHeight: '100vh',\n      paddingTop: 23\n    },\n    box: {\n      padding: 24,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      flexDirection: 'column',\n      maxWidth: 900,\n      margin: 'auto'\n    },\n    noAccBtn: {\n      color: '#b0b0b0',\n      fontWeight: 400,\n      textAlign: 'center',\n      marginRight: 21,\n      whiteSpace: 'nowrap'\n    },\n    welcome: {\n      paddingBottom: 20,\n      color: '#000000',\n      fontWeight: 500\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <SnackbarProvider maxSnack={1} autoHideDuration={3000}>\n        <BrowserRouter>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n        </BrowserRouter>\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/reportWebVitals.js",[],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/pages/Signup.jsx",[],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/pages/Login.jsx",[],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/pages/Home.jsx",["104","105","106"],"import React, { useEffect, useState } from 'react';\nimport { useIsLoggedIn } from '../services/authenticationService';\n\nimport Sidebar from '../layout/Sidebar';\nimport { useHistory } from 'react-router-dom';\nimport socketIOClient from 'socket.io-client';\n\nexport default function Home() {\n\tconst [ currentUser, setCurrentUser ] = useState(null);\n\tconst [ conversation, setConversation ] = useState({});\n\tconst [ connected, setConnected ] = useState(false);\n\tconst [ userList, setUserList ] = useState([]);\n\tconst [ newMessage, setNewMessage ] = useState({});\n\tconst [ onlineUsers, setOnlineUsers ] = useState(null);\n\tconst [ typing, setTyping ] = useState(false);\n\tconst [ selected, setSelected ] = useState();\n\n\tconst socket = socketIOClient(process.env.REACT_APP_API_URL, {\n\t\ttransports: [ 'websocket', 'polling', 'flashsocket' ],\n\t\treconnection: true,\n\t\treconnectionDelay: 3000,\n\t\treconnectionAttempts: 20\n\t});\n\n\tconst isLoggedIn = useIsLoggedIn();\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tconst checkLoggedIn = async () => {\n\t\t\tconst status = await isLoggedIn();\n\n\t\t\tif (status && status.loggedIn) {\n\t\t\t\tsetCurrentUser(status.user);\n\t\t\t} else {\n\t\t\t\thistory.push('/signup');\n\t\t\t}\n\t\t};\n\t\tcheckLoggedIn();\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (currentUser) {\n\t\t\t\tsocket.emit('setup', currentUser);\n\t\t\t\tsocket.on('connected', (data) => {\n\t\t\t\t\tsetConnected(true);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[ currentUser ]\n\t);\n\n\tconst isOnline = (onlineUsers, convUsers) => {\n\t\tlet notCurrentUsers = convUsers.filter((user) => user._id !== currentUser._id);\n\t\tlet conversationsUsers = notCurrentUsers.map((user) => user._id)[0];\n\n\t\tfor (let user in onlineUsers) {\n\t\t\tif (onlineUsers[user][1] === conversationsUsers) return true;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsocket.on('online', (data) => {\n\t\t\tsetOnlineUsers(data._data);\n\t\t});\n\t\tsocket.on('offline', (data) => {\n\t\t\tsetOnlineUsers(data._data);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t{currentUser && (\n\t\t\t\t<Sidebar\n\t\t\t\t\tsetUserList={setUserList}\n\t\t\t\t\tuserList={userList}\n\t\t\t\t\tconversation={conversation}\n\t\t\t\t\tsetConversation={setConversation}\n\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\tsocket={socket}\n\t\t\t\t\tconnected={connected}\n\t\t\t\t\tnewMessage={newMessage}\n\t\t\t\t\tsetNewMessage={setNewMessage}\n\t\t\t\t\tsetOnlineUsers={setOnlineUsers}\n\t\t\t\t\tonlineUsers={onlineUsers}\n\t\t\t\t\tisOnline={isOnline}\n\t\t\t\t\ttyping={typing}\n\t\t\t\t\tsetTyping={setTyping}\n\t\t\t\t\tselected={selected}\n\t\t\t\t\tsetSelected={setSelected}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/services/authenticationService.js",[],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/layout/LoginLayout.jsx",["107"],"import Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tminHeight: '100vh',\n\t\t'& .MuiInput-underline:before': {\n\t\t\tborderBottom: '1.2px solid rgba(0, 0, 0, 0.2)'\n\t\t}\n\t},\n\theroText: {\n\t\ttextAlign: 'center',\n\t\tcolor: theme.palette.background.default,\n\t\tmarginTop: 30,\n\t\tmaxWidth: 300\n\t},\n\toverlay: {\n\t\tbackgroundImage: 'linear-gradient(180deg, rgb(58,141,255, 0.75) 0%, rgb(134,185,255, 0.75) 100%)',\n\t\tbackgroundSize: 'cover',\n\t\tbackgroundPosition: 'center',\n\t\tflexDirection: 'column',\n\t\tminHeight: '100vh',\n\t\tpaddingBottom: 145,\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center'\n\t},\n\timage: {\n\t\tbackgroundImage: 'url(https://res.cloudinary.com/dna1o7hrm/image/upload/v1612406581/xx6gk8ptlz7hfbtf6wno.png)',\n\t\tbackgroundRepeat: 'no-repeat',\n\t\tbackgroundSize: 'cover',\n\t\tbackgroundPosition: 'center'\n\t}\n}));\n\nexport default function Authorization({ children }) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container component=\"main\" className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<Grid item xs={false} sm={4} md={5} className={classes.image}>\n\t\t\t\t<Box className={classes.overlay}>\n\t\t\t\t\t<Hidden xsDown>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\twidth={67}\n\t\t\t\t\t\t\tsrc=\"https://res.cloudinary.com/dna1o7hrm/image/upload/v1612406581/r1hhd9ry5wxux0tqhju0.png\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Hidden smDown>\n\t\t\t\t\t\t\t<Typography className={classes.heroText} variant=\"h4\">\n\t\t\t\t\t\t\t\tConverse with anyone with any language\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Hidden>\n\t\t\t\t\t</Hidden>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={8} md={7} elevation={6} component={Paper} square>\n\t\t\t\t{children}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/layout/Sidebar.jsx",["108","109","110"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Dropdown from '../layout/Dropdown';\nimport Conversations from '../components/Conversations';\nimport UserButton from '../components/UserButton';\nimport Search from '../components/Search';\nimport Users from '../components/Users';\nimport Chat from '../components/Chat';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& .MuiDrawer-paperAnchorDockedLeft': {\n\t\t\tborderRight: 'none'\n\t\t},\n\t\tdisplay: 'flex',\n\t\tborderRight: 'none'\n\t},\n\tdrawer: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0\n\t\t}\n\t},\n\tappBar: {\n\t\theight: 89,\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\tbackgroundColor: theme.palette.background.default,\n\t\tcolor: theme.palette.primary.black,\n\t\tfilter: 'drop-shadow(0px 2px 10px rgba(88,133,196,0.1))',\n\t\tboxShadow: 'none',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth + 25}px)`,\n\t\t\tmarginLeft: drawerWidth\n\t\t}\n\t},\n\tchatHeader: {\n\t\tfontWeight: 600,\n\t\tpaddingBottom: 15,\n\t\tmarginTop: 10\n\t},\n\tchatTitle: {\n\t\tfontWeight: 600\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'none'\n\t\t}\n\t},\n\tmenuHeader: {\n\t\tpaddingLeft: 20,\n\t\tpaddingRight: 20,\n\t\tmarginBottom: 5,\n\t\tmarginTop: 5\n\t},\n\t// necessary for content to be below app bar\n\ttoolbar: theme.mixins.toolbar,\n\ttoolbar: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-between',\n\t\tmarginRight: 19\n\t},\n\tdrawerPaper: {\n\t\twidth: drawerWidth\n\t},\n\tcontent: {\n\t\tflexGrow: 1\n\t},\n\tsidebarWrapper: {\n\t\tposition: 'relative',\n\t\theight: '100vh',\n\t\toverflow: 'auto',\n\t\tzIndex: '4',\n\t\tpaddingLeft: 20,\n\t\tpaddingRight: 20,\n\t\toverflowScrolling: 'touch'\n\t},\n\tonlineLabel: {\n\t\tcolor: theme.palette.primary.gray\n\t},\n\ttopBarContent: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'baseline',\n\t\tmarginLeft: 10\n\t},\n\ttoolbarContent: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-between',\n\t\twidth: '100%',\n\t\talignItems: 'center'\n\t},\n\tonlineIcon: {\n\t\tbackgroundColor: theme.palette.icon.online,\n\t\tfontSize: 13,\n\t\tmarginRight: 5,\n\t\twidth: 8,\n\t\theight: 8,\n\t\tborderRadius: 4,\n\t\tmarginLeft: 20\n\t},\n\tpaper: {\n\t\tfilter: 'drop-shadow(0px 2px 10px rgba(88,133,196,0.1))',\n\t\tborderRadius: 0\n\t}\n}));\n\nfunction Sidebar({\n\tuserList,\n\tsetUserList,\n\tconversation,\n\tsetConversation,\n\tactiveChats,\n\tsetActiveChats,\n\tcurrentUser,\n\tnewMessage,\n\tsetNewMessage,\n\tconnected,\n\tonlineUsers,\n\tisOnline,\n\ttyping,\n\tsetOnlineUsers,\n\tsetTyping,\n\tselected,\n\tsetSelected,\n\tsocket\n}) {\n\tconst { window } = {\n\t\tuserList,\n\t\tsetUserList,\n\t\tconversation,\n\t\tsetConversation,\n\t\tactiveChats,\n\t\tsetActiveChats,\n\t\tcurrentUser,\n\t\tnewMessage,\n\t\tsetNewMessage,\n\t\tconnected,\n\t\tonlineUsers,\n\t\tisOnline,\n\t\ttyping,\n\t\tsetOnlineUsers,\n\t\tsetTyping,\n\t\tselected,\n\t\tsetSelected,\n\t\tsocket\n\t};\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst [ mobileOpen, setMobileOpen ] = useState(false);\n\tconst [ selectedTab, setSelectedTab ] = useState(0);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetSelectedTab(newValue);\n\t};\n\n\tconst drawer = (\n\t\t<div className={classes.menuHeader}>\n\t\t\t{currentUser && <UserButton user={currentUser} online={true} />}\n\t\t\t<Typography variant=\"h6\" className={classes.chatHeader}>\n\t\t\t\tChats\n\t\t\t</Typography>\n\t\t\t<Search setUserList={setUserList} onlineUsers={onlineUsers} />\n\t\t</div>\n\t);\n\n\tconst drawerContent = (\n\t\t<div className={classes.sidebarWrapper}>\n\t\t\t{selectedTab === 0 ? (\n\t\t\t\t<Conversations\n\t\t\t\t\tsetConversation={setConversation}\n\t\t\t\t\tconversation={conversation}\n\t\t\t\t\tnewMessage={newMessage}\n\t\t\t\t\tsetNewMessage={setNewMessage}\n\t\t\t\t\tsocket={socket}\n\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\tconnected={connected}\n\t\t\t\t\tsetOnlineUsers={setOnlineUsers}\n\t\t\t\t\tonlineUsers={onlineUsers}\n\t\t\t\t\tisOnline={isOnline}\n\t\t\t\t\ttyping={typing}\n\t\t\t\t\tsetTyping={setTyping}\n\t\t\t\t\tselected={selected}\n\t\t\t\t\tsetSelected={setSelected}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Users\n\t\t\t\t\tuserList={userList}\n\t\t\t\t\tsetUserList={setUserList}\n\t\t\t\t\tsetConversation={setConversation}\n\t\t\t\t\tconversation={conversation}\n\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\tsetSelectedTab={setSelectedTab}\n\t\t\t\t\tsocket={socket}\n\t\t\t\t\tselected={selected}\n\t\t\t\t\tsetSelected={setSelected}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n\n\tconst bottomTabs = (\n\t\t<Paper className={classes.paper}>\n\t\t\t<Tabs\n\t\t\t\tvalue={selectedTab}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvariant=\"fullWidth\"\n\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\ttextColor=\"primary\"\n\t\t\t\taria-label=\"icon tabs example\"\n\t\t\t>\n\t\t\t\t<Tab icon={<ForumIcon />} aria-label=\"phone\" />\n\t\t\t\t<Tab icon={<AccountCircleIcon />} aria-label=\"phone\" />\n\t\t\t</Tabs>\n\t\t</Paper>\n\t);\n\n\tconst container = window !== undefined ? () => window().document.body : undefined;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<div className={classes.toolbarContent}>\n\t\t\t\t\t\t\t{conversation.users && (\n\t\t\t\t\t\t\t\t<div className={classes.topBarContent}>\n\t\t\t\t\t\t\t\t\t{conversation.users && (\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.chatTitle}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tconversation.users.filter((user) => user._id !== currentUser._id)[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t.username\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t{isOnline(onlineUsers, conversation.users) && (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.onlineIcon} />\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" className={classes.onlineLabel}>\n\t\t\t\t\t\t\t\t\t\t\t\tOnline\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!conversation.users && (\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.chatTitle}>\n\t\t\t\t\t\t\t\t\tWelcome to Steve Messenger\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Dropdown currentUserId={currentUser && currentUser._id} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<nav className={classes.drawer} aria-label=\"chats\">\n\t\t\t\t\t<Hidden smUp implementation=\"css\">\n\t\t\t\t\t\t<Drawer\n\t\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\n\t\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\t\tkeepMounted: true\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{drawer}\n\t\t\t\t\t\t\t{drawerContent}\n\t\t\t\t\t\t\t{bottomTabs}\n\t\t\t\t\t\t</Drawer>\n\t\t\t\t\t</Hidden>\n\t\t\t\t\t<Hidden xsDown implementation=\"css\">\n\t\t\t\t\t\t<Drawer\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\t\topen\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{drawer}\n\t\t\t\t\t\t\t{drawerContent}\n\t\t\t\t\t\t\t{bottomTabs}\n\t\t\t\t\t\t</Drawer>\n\t\t\t\t\t</Hidden>\n\t\t\t\t</nav>\n\t\t\t\t<main className={classes.content} style={{ overflowY: 'hidden' }}>\n\t\t\t\t\t<Chat\n\t\t\t\t\t\tconversation={setConversation}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tconversation={conversation}\n\t\t\t\t\t\tsocket={socket}\n\t\t\t\t\t\tconnected={connected}\n\t\t\t\t\t\tnewMessage={newMessage}\n\t\t\t\t\t\tsetNewMessage={setNewMessage}\n\t\t\t\t\t\ttyping={typing}\n\t\t\t\t\t\tsetTyping={setTyping}\n\t\t\t\t\t/>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Sidebar;\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/utilities/handleResponse.js",["111"],"import { useSnackbar } from 'notistack';\n\n\nconst useHandleResponse = () => {\n    const enqueueSnackbar = useSnackbar()\n\n    const handleResponse = response => {\n        return response.text().then(text => {\n            const data = text && JSON.parse(text);\n            if (!response.ok) {\n                if ([401, 403].indexOf(response.status) !== -1) {\n\n                    // enqueueSnackbar('User Unauthorized', {\n                    //     variant: 'error',\n                    // });\n                }\n\n                const error = (data && data.message) || response.statusText;\n                return Promise.reject(error);\n            }\n\n            return data;\n        });\n    };\n\n    return handleResponse;\n};\n\nexport default useHandleResponse;\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/layout/Dropdown.jsx",[],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Conversations.jsx",["112","113"],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/UserButton.jsx",[],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Chat.jsx",["114","115","116","117","118"],"import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport EmptyState from '../components/EmptyState';\nimport Message from '../components/Message';\nimport { useSendMessage, useGetMessages } from '../services/chatService';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline': {\n\t\t\tborderColor: theme.palette.background.default\n\t\t},\n\t\t'& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n\t\t\tborder: `1px solid ${theme.palette.background.default}`\n\t\t},\n\t\toverflowY: 'hidden'\n\t},\n\tchatContainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\theight: '100vh'\n\t},\n\tcontentHolder: {\n\t\tflex: 1,\n\t\toverflowY: 'auto'\n\t},\n\tmessageContainer: {\n\t\theight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column-reverse',\n\t\toverflowY: 'auto'\n\t},\n\tmessagesArea: {\n\t\tpaddingLeft: 30,\n\t\tpaddingRight: 30,\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tpaddingLeft: 100\n\t\t}\n\t},\n\tmessageList: {\n\t\twidth: '100%',\n\t\tpaddingRight: 30,\n\t\tpaddingLeft: 30,\n\t\tmarginBottom: 15,\n\t\t[theme.breakpoints.up('lg')]: {\n\t\t\tpaddingLeft: 40\n\t\t}\n\t},\n\tinputRow: {\n\t\tbackground: theme.palette.background.default,\n\t\tpaddingBottom: 35,\n\t\tposition: 'sticky',\n\t\tpaddingTop: 5,\n\t\tbottom: 0,\n\t\tpaddingLeft: 45,\n\t\tpaddingRight: 45,\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('lg')]: {\n\t\t\tpaddingLeft: 65\n\t\t}\n\t},\n\trecordIcon: { marginRight: 12 },\n\tlistItem: {\n\t\tdisplay: 'flex',\n\t\twidth: '100%'\n\t},\n\tlistItemRight: {\n\t\tflexDirection: 'row-reverse'\n\t},\n\tmessageInput: {\n\t\theight: 70,\n\t\tmarginBottom: 35,\n\t\tborderRadius: 8,\n\t\tbackgroundColor: theme.palette.message.bubble,\n\t\tdisplay: 'flex',\n\t\tpaddingLeft: 20,\n\t\talignItems: 'center'\n\t},\n\tuserLabel: { marginRight: 5 },\n\tmessageIcons: {\n\t\tdisplay: 'flex',\n\t\tcolor: theme.palette.icon.default,\n\t\tmarginRight: 10\n\t},\n\tspacerBottom: {\n\t\theight: 120\n\t},\n\tdots: {\n\t\tpaddingLeft: 10,\n\t\tpaddingRight: 20,\n\t\twidth: 80,\n\t\tmarginLeft: 47,\n\t\tpaddingTop: 6,\n\t\tmarginBottom: 36,\n\t\tbackgroundImage: theme.palette.message.messageBubbleLeft,\n\t\tborderRadius: '0 10px 10px 10px'\n\t},\n\tnowTyping: {\n\t\twidth: 40,\n\t\tmarginLeft: 10\n\t}\n}));\n\nexport default function Chat({\n\tconversation,\n\tcurrentUser,\n\tsocket,\n\tconnected,\n\tnewMessage,\n\tsetNewMessage,\n\ttyping,\n\tsetTyping\n}) {\n\tconst classes = useStyles();\n\n\tconst [ content, setContent ] = useState('');\n\tconst [ messages, setMessages ] = useState([]);\n\tconst [ loading, setLoading ] = useState('');\n\n\tlet chatBottom = useRef(null);\n\n\tconst sendMessage = useSendMessage();\n\tconst getMessages = useGetMessages();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (!connected) return;\n\t\t\tsocket.emit('join room', conversation._id);\n\t\t\tsocket.on('typing', () => setTyping(true));\n\t\t\tsocket.on('stop typing', () => setTyping(false));\n\n\t\t\treturn () => {\n\t\t\t\tsocket.off();\n\t\t\t};\n\t\t},\n\t\t[ connected, socket ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst timeoutId = setTimeout(() => socket.emit('stop typing', conversation._id), 500);\n\t\t\treturn () => clearTimeout(timeoutId);\n\t\t},\n\t\t[ content ]\n\t);\n\n\tuseEffect(() => {\n\t\tsocket.on('message received', (newMessage) => {\n\t\t\tsetNewMessage(newMessage);\n\t\t});\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\treloadMessages();\n\t\t},\n\t\t[ conversation._id ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (conversation._id && newMessage.chat === conversation._id) {\n\t\t\t\tsetMessages([ ...messages, newMessage ]);\n\t\t\t}\n\t\t},\n\t\t[ newMessage ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tscrollToBottom('auto');\n\t\t},\n\t\t[ messages ]\n\t);\n\n\tconst reloadMessages = () => {\n\t\tif (conversation._id) {\n\t\t\tsetLoading(true);\n\t\t\tgetMessages(conversation._id)\n\t\t\t\t.then((result) => {\n\t\t\t\t\tsetMessages(result);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tscrollToBottom('auto');\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (content !== '') {\n\t\t\tsendMessage(conversation._id, content).then((res) => {\n\t\t\t\tsetContent('');\n\t\t\t});\n\t\t}\n\t\tsocket.emit('stop typing', conversation._id);\n\t};\n\n\tconst updateTyping = (e) => {\n\t\tsetContent(e.target.value);\n\t\tsocket.emit('typing', conversation._id);\n\t};\n\n\tconst scrollToBottom = (type) => {\n\t\tif (chatBottom && chatBottom.current) {\n\t\t\tchatBottom.current.scrollIntoView({ behavior: type });\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.chatContainer}>\n\t\t\t<div style={{ height: 130 }} />\n\t\t\t{messages.length === 0 && !loading && <EmptyState conversation={conversation} currentUser={currentUser} />}\n\t\t\t<div className={classes.contentHolder}>\n\t\t\t\t<Grid container className={classes.messageContainer}>\n\t\t\t\t\t<List className={classes.messageList}>\n\t\t\t\t\t\t{!loading && messages.map((message) => <Message message={message} currentUser={currentUser} />)}\n\t\t\t\t\t</List>\n\t\t\t\t\t<div ref={chatBottom} />\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t\t{typing &&\n\t\t\tconversation._id && (\n\t\t\t\t<div className={classes.dots}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={classes.nowTyping}\n\t\t\t\t\t\tsrc=\"https://res.cloudinary.com/dna1o7hrm/image/upload/v1612406581/o8wm8wiaajskpnchmtiy.gif\"\n\t\t\t\t\t\talt=\"typing dots\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<BottomNavigation style={{ height: 70 }}>\n\t\t\t\t<div className={classes.inputRow}>\n\t\t\t\t\t<form onSubmit={handleSubmit} className={classes.form}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"message\"\n\t\t\t\t\t\t\tplaceholder=\"Type something...\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tclassName: classes.messageInput,\n\t\t\t\t\t\t\t\tdisableunderline: 'true',\n\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t<div className={classes.messageIcons}>\n\t\t\t\t\t\t\t\t\t\t<FiberManualRecordIcon className={classes.recordIcon} />\n\t\t\t\t\t\t\t\t\t\t<FileCopyIcon />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => updateTyping(event)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</BottomNavigation>\n\t\t</div>\n\t);\n}\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Search.jsx",["119"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useGetUsers, useSearchUsers } from '../services/userService';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline': {\n\t\t\tborderColor: theme.palette.background.default\n\t\t},\n\t\t'& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n\t\t\tborder: '1px solid white'\n\t\t}\n\t},\n\tsearchInput: {\n\t\theight: 50,\n\t\tborderRadius: 8,\n\t\tbackgroundColor: '#e9eef9',\n\t\tdisplay: 'flex',\n\t\tpaddingLeft: 20,\n\t\talignItems: 'center'\n\t},\n\tsearchIcon: {\n\t\tcolor: '#B1C3DF',\n\t\tmarginRight: 6\n\t}\n}));\n\nexport default function Search({ setUserList, onlineUsers }) {\n\tconst classes = useStyles();\n\tconst [ query, setQuery ] = useState('');\n\n\tconst searchUsers = useSearchUsers();\n\tconst getUsers = useGetUsers();\n\n\tconst search = async () => {\n\t\tconst searchResults = await searchUsers(query);\n\t\tsetUserList(searchResults);\n\t};\n\n\tconst handleSearch = (e) => {\n\t\tsetQuery(e);\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (query !== '') {\n\t\t\t\tsearch();\n\t\t\t} else {\n\t\t\t\tgetUsers().then((res) => {\n\t\t\t\t\tsetUserList(res);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[ query, onlineUsers ]\n\t);\n\n\treturn (\n\t\t<TextField\n\t\t\tvariant=\"outlined\"\n\t\t\tfullWidth\n\t\t\tplaceholder=\"Search...\"\n\t\t\tclassName={classes.root}\n\t\t\tInputProps={{\n\t\t\t\tclassName: classes.searchInput,\n\t\t\t\tstartAdornment: <SearchIcon className={classes.searchIcon} />\n\t\t\t}}\n\t\t\tvalue={query}\n\t\t\tonChange={(e) => handleSearch(e.target.value)}\n\t\t/>\n\t);\n}\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Users.jsx",["120"],"import List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect } from 'react';\nimport UserButton from '../components/UserButton';\nimport { useCreateChat } from '../services/chatService';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n\tlist: {\n\t\tmarginLeft: 10,\n\t\tmarginRight: 20\n\t}\n}));\n\nexport default function Users({ userList, setConversation, setSelectedTab, setSelected }) {\n\tconst classes = useStyles();\n\tconst createChat = useCreateChat();\n\n\tconst handleClick = (user) => {\n\t\tcreateChat(user).then((results) => {\n\t\t\tsetConversation(results);\n\t\t\tsetSelectedTab(0);\n\t\t\tsetSelected(results._id);\n\t\t});\n\t};\n\n\treturn (\n\t\t<List className={classes.list}>\n\t\t\t{userList.length === 0 ? (\n\t\t\t\t<div className={classes.spinner}>\n\t\t\t\t\t<CircularProgress color=\"primary\" />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>{userList.map((user) => <UserButton key={user._id} user={user} handleClick={handleClick} />)}</div>\n\t\t\t)}\n\t\t</List>\n\t);\n}\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/services/chatService.js",[],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/services/userService.js",[],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/utilities/common.js",["121"],"export default {\n    hashCode: (str) => {\n        var hash = 0;\n        for (var i = 0; i < str.length; i++) {\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        return hash;\n    },\n    intToRGB: (i) => {\n        var c = (i & 0x00ffffff).toString(16).toUpperCase();\n        return '00000'.substring(0, 6 - c.length) + c;\n    }\n};\n\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/Message.jsx",["122"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MUIListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport classnames from 'classnames';\nimport Moment from 'react-moment';\n\nconst useStyles = makeStyles((theme) => ({\n\tuserLabel: { marginRight: 5 },\n\tmessageLabel: { color: theme.palette.message.label },\n\tlistItem: {\n\t\tdisplay: 'flex',\n\t\twidth: '100%'\n\t},\n\tlistItemRight: {\n\t\tflexDirection: 'row-reverse'\n\t},\n\tavatar: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center'\n\t},\n\tavatarCircle: {\n\t\theight: 30,\n\t\twidth: 30,\n\t\tfontSize: 13,\n\t\ttextTransform: 'uppercase'\n\t},\n\tmessageBubble: {\n\t\tflex: '0 1 auto',\n\t\tpadding: 10,\n\t\tpaddingLeft: 20,\n\t\tpaddingRight: 20,\n\t\tborder: `1px solid ${theme.palette.background.default}`,\n\t\tcolor: theme.palette.primary.light,\n\t\tbackgroundImage: theme.palette.message.messageBubbleLeft,\n\t\tborderRadius: '0 10px 10px 10px',\n\t\tmarginTop: 8,\n\t\tmaxWidth: '40em',\n\t\tcolor: theme.palette.background.default\n\t},\n\tmessageBubbleRight: {\n\t\tbackgroundColor: theme.palette.message.bubble,\n\t\tbackgroundImage: 'none',\n\t\tcolor: theme.palette.message.messageBubbleText,\n\t\tfontWeight: 600,\n\t\tborderRadius: '10px 10px 0 10px'\n\t}\n}));\n\nconst Message = React.memo(({ message, currentUser }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<MUIListItem\n\t\t\tkey={message._id}\n\t\t\tclassName={classnames(classes.listItem, {\n\t\t\t\t[`${classes.listItemRight}`]:\n\t\t\t\t\tmessage.sender._id === currentUser._id || message.sender === currentUser._id\n\t\t\t})}\n\t\t\talignItems=\"flex-start\"\n\t\t>\n\t\t\t<div>\n\t\t\t\t<Typography variant=\"caption\" className={classes.messageLabel}>\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\tjustifyContent:\n\t\t\t\t\t\t\t\t(message.sender._id === currentUser._id && 'flex-end') ||\n\t\t\t\t\t\t\t\t(message.sender === currentUser._id && 'flex-end')\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{message.sender._id === currentUser._id ||\n\t\t\t\t\t\t\t(message.sender !== currentUser._id && (\n\t\t\t\t\t\t\t\t<span className={classes.userLabel}>{message.sender.username}</span>\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t<Moment format=\"h:mm\">{message.createdAt}</Moment>\n\t\t\t\t\t</span>\n\t\t\t\t</Typography>\n\t\t\t\t<ListItemText\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\troot: classnames(classes.messageBubble, {\n\t\t\t\t\t\t\t[`${classes.messageBubbleRight}`]:\n\t\t\t\t\t\t\t\tmessage.sender._id === currentUser._id || message.sender === currentUser._id\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\tprimary={<React.Fragment>{message.content}</React.Fragment>}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</MUIListItem>\n\t);\n});\n\nexport default Message;\n","/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/EmptyState.jsx",[],"/Users/stevenkeezer/Desktop/mernchatapp/client/src/components/ListAvatar.jsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":3,"column":32,"nodeType":"129","messageId":"130","endLine":3,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":39,"column":5,"nodeType":"133","endLine":39,"endColumn":7,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":50,"column":3,"nodeType":"133","endLine":50,"endColumn":18,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"135","line":69,"column":5,"nodeType":"133","endLine":69,"endColumn":7,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":51,"column":7,"nodeType":"140","endLine":54,"endColumn":9},{"ruleId":"127","severity":1,"message":"141","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":74,"column":2,"nodeType":"144","messageId":"145","endLine":74,"endColumn":9},{"ruleId":"146","severity":1,"message":"147","line":324,"column":7,"nodeType":"148","endLine":324,"endColumn":34},{"ruleId":"127","severity":1,"message":"149","line":5,"column":11,"nodeType":"129","messageId":"130","endLine":5,"endColumn":26},{"ruleId":"131","severity":1,"message":"150","line":84,"column":3,"nodeType":"133","endLine":84,"endColumn":43,"suggestions":"151"},{"ruleId":"131","severity":1,"message":"152","line":96,"column":3,"nodeType":"133","endLine":96,"endColumn":46,"suggestions":"153"},{"ruleId":"131","severity":1,"message":"154","line":141,"column":3,"nodeType":"133","endLine":141,"endColumn":24,"suggestions":"155"},{"ruleId":"131","severity":1,"message":"156","line":149,"column":3,"nodeType":"133","endLine":149,"endColumn":14,"suggestions":"157"},{"ruleId":"131","severity":1,"message":"158","line":156,"column":5,"nodeType":"133","endLine":156,"endColumn":7,"suggestions":"159"},{"ruleId":"131","severity":1,"message":"160","line":162,"column":3,"nodeType":"133","endLine":162,"endColumn":23,"suggestions":"161"},{"ruleId":"131","severity":1,"message":"162","line":171,"column":3,"nodeType":"133","endLine":171,"endColumn":17,"suggestions":"163"},{"ruleId":"131","severity":1,"message":"164","line":56,"column":3,"nodeType":"133","endLine":56,"endColumn":25,"suggestions":"165"},{"ruleId":"127","severity":1,"message":"141","line":3,"column":17,"nodeType":"129","messageId":"130","endLine":3,"endColumn":26},{"ruleId":"166","severity":1,"message":"167","line":1,"column":1,"nodeType":"168","endLine":13,"endColumn":3},{"ruleId":"142","severity":1,"message":"169","line":40,"column":3,"nodeType":"144","messageId":"145","endLine":40,"endColumn":8},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["172"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["173"],["174"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","no-dupe-keys","Duplicate key 'toolbar'.","ObjectExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'enqueueSnackbar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'conversation._id', 'getOnlineUsers', and 'markAsRead'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'getNotifications'. Either include it or remove the dependency array.",["176"],"React Hook useEffect has missing dependencies: 'conversation._id' and 'setTyping'. Either include them or remove the dependency array. If 'setTyping' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["177"],"React Hook useEffect has missing dependencies: 'conversation._id' and 'socket'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'setNewMessage' and 'socket'. Either include them or remove the dependency array. If 'setNewMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["179"],"React Hook useEffect has a missing dependency: 'reloadMessages'. Either include it or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'conversation._id' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["181"],"React Hook useEffect has missing dependencies: 'getUsers', 'search', and 'setUserList'. Either include them or remove the dependency array. If 'setUserList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["182"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Duplicate key 'color'.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [history, isLoggedIn]",{"range":"205","text":"206"},"Update the dependencies array to be: [currentUser, socket]",{"range":"207","text":"208"},"Update the dependencies array to be: [socket]",{"range":"209","text":"210"},"Update the dependencies array to be: [newMessage, setNewMessage, connected, conversation._id, markAsRead, getOnlineUsers]",{"range":"211","text":"212"},"Update the dependencies array to be: [newMessage, conversation, setNewMessage, getNotifications]",{"range":"213","text":"214"},"Update the dependencies array to be: [connected, conversation._id, setTyping, socket]",{"range":"215","text":"216"},"Update the dependencies array to be: [content, conversation._id, socket]",{"range":"217","text":"218"},"Update the dependencies array to be: [setNewMessage, socket]",{"range":"219","text":"220"},"Update the dependencies array to be: [conversation._id, reloadMessages]",{"range":"221","text":"222"},"Update the dependencies array to be: [conversation._id, messages, newMessage]",{"range":"223","text":"224"},"Update the dependencies array to be: [query, onlineUsers, search, getUsers, setUserList]",{"range":"225","text":"226"},[1223,1225],"[history, isLoggedIn]",[1396,1411],"[currentUser, socket]",[1893,1895],"[socket]",[2076,2116],"[newMessage, setNewMessage, connected, conversation._id, markAsRead, getOnlineUsers]",[2307,2350],"[newMessage, conversation, setNewMessage, getNotifications]",[3143,3164],"[connected, conversation._id, setTyping, socket]",[3330,3341],"[content, conversation._id, socket]",[3456,3458],"[setNewMessage, socket]",[3512,3532],"[conversation._id, reloadMessages]",[3685,3699],"[conversation._id, messages, newMessage]",[1279,1301],"[query, onlineUsers, search, getUsers, setUserList]"]